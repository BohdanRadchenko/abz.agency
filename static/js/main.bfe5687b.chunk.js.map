{"version":3,"sources":["redux/users/actionTypeUsers.js","components/Loaders.js","components/App.js","serviceWorker.js","redux/users/usersReducers.js","redux/controller/controllerReducers.js","redux/store.js","index.js","redux/users/usersOperations.js","redux/users/usersActions.js","components/App.module.css","redux/controller/controllerSelectors.js","redux/controller/actionTypeController.js","redux/controller/controllerActions.js"],"names":["ActionTypes","FETCH_POSITIONS_REQUEST","FETCH_POSITIONS_SUCCESS","FETCH_POSITIONS_ERROR","FETCH_TOKEN_REQUEST","FETCH_TOKEN_SUCCESS","FETCH_TOKEN_ERROR","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_ERROR","FETCH_USER_BY_ID_REQUEST","FETCH_USER_BY_ID_SUCCESS","FETCH_USER_BY_ID_ERROR","ADD_USER_REQUEST","ADD_USER_SUCCESS","ADD_USER_ERROR","divStyle","position","left","top","transform","timeout","Loaders","style","type","color","height","width","React","Component","AsyncModal","lazy","AsyncHeader","AsyncBurgerMenu","AsyncBunner","AsyncAbout","AsyncUsers","AsyncRegistredForm","AsyncFooter","App","page","this","props","fetchUsers","fetchToken","fetchPositions","scrollSpy","update","prevProps","fallback","className","css","container","mapDispatchToProps","usersOperations","connect","state","controllerSelectors","Boolean","window","location","hostname","match","combineReducers","positions","payload","token","items","users","sort","a","b","registration_timestamp","loading","error","modalOpen","MODAL_OPEN","MODAL_CLOSE","burgerMenuOpen","HANDLE_OPEN_BURGER_MENU","currentPage","HANDLE_URL_PAGE","totalPage","HANDLE_TOTAL_PAGE","rootReducer","usersReducers","controllers","controllerReducers","middleware","ReduxThunk","enhancer","applyMiddleware","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","dispatch","count","documentElement","clientWidth","URL","axios","get","response","handleTotalPage","data","total_pages","catch","fetchUsersError","fetchTokenError","fetchPositionsError","fetchPostUser","post","headers","user","console","log","addUserError","module","exports","modalIsOpen","getPage","getTotalPage","burgerMenuIsOpen","HANDLE_BURGER_EVENT_BUTTON","modalClose","handleCurrentPage","value"],"mappings":"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","file":"static/js/main.bfe5687b.chunk.js","sourcesContent":["export const ActionTypes = {\r\n  FETCH_POSITIONS_REQUEST : 'FETCH_POSITIONS_REQUEST',\r\n  FETCH_POSITIONS_SUCCESS : 'FETCH_POSITIONS_SUCCESS',\r\n  FETCH_POSITIONS_ERROR : 'FETCH_POSITIONS_ERROR',\r\n\r\n  FETCH_TOKEN_REQUEST : 'FETCH_TOKEN_REQUEST',\r\n  FETCH_TOKEN_SUCCESS : 'FETCH_TOKEN_SUCCESS',\r\n  FETCH_TOKEN_ERROR : 'FETCH_TOKEN_ERROR',\r\n\r\n  FETCH_USERS_REQUEST : 'FETCH_USERS_REQUEST',\r\n  FETCH_USERS_SUCCESS : 'FETCH_USERS_SUCCESS',\r\n  FETCH_USERS_ERROR : 'FETCH_USERS_ERROR',\r\n\r\n  FETCH_USER_BY_ID_REQUEST: 'FETCH_USER_BY_ID_REQUEST',\r\n  FETCH_USER_BY_ID_SUCCESS: 'FETCH_USER_BY_ID_SUCCESS',\r\n  FETCH_USER_BY_ID_ERROR: 'FETCH_USER_BY_ID_ERROR',\r\n\r\n  ADD_USER_REQUEST : 'ADD_USER_REQUEST',\r\n  ADD_USER_SUCCESS : 'ADD_USER_SUCCESS',\r\n  ADD_USER_ERROR : 'ADD_USER_ERROR',\r\n};","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst divStyle = {\r\n  position: 'absolute',\r\n  left: '50%',\r\n  top: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  timeout: 3000,\r\n};\r\n\r\nexport default class Loaders extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={divStyle}>\r\n        <Loader type=\"Oval\" color=\"#3d5575\" height={100} width={200} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component, lazy, Suspense} from 'react';\nimport {scrollSpy} from 'react-scroll'\nimport {connect} from 'react-redux';\nimport Loaders from './Loaders'\nimport * as usersOperations from '../redux/users/usersOperations';\nimport * as controllerSelectors from '../redux/controller/controllerSelectors';\n\nimport css from './App.module.css'\n\nconst AsyncModal = lazy(() =>\n  import(\"./Modal/Modal\"),\n);\nconst AsyncHeader = lazy(() =>\n  import(\"./Header/Header\"),\n);\nconst AsyncBurgerMenu = lazy(() =>\n  import(\"./BurgerMenu/BurgerMenu\"),\n);\n\nconst AsyncBunner = lazy(() =>\n  import(\"./Bunner/Bunner\"),\n);\nconst AsyncAbout = lazy(() =>\n  import(\"./About/About\"),\n);\nconst AsyncUsers = lazy(() =>\n  import(\"./Users/Users\"),\n);\nconst AsyncRegistredForm = lazy(() =>\n  import(\"./RegistredForm/RegistredForm\"),\n);\nconst AsyncFooter = lazy(() =>\n  import(\"./Footer/Footer\"),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    const page = this.props.page;\n    this.props.fetchUsers(page);\n    this.props.fetchToken();\n    this.props.fetchPositions();\n    scrollSpy.update();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.page !== this.props.page) {\n      const page = this.props.page;\n      this.props.fetchUsers(page);\n    }\n  };\n\n  render() {\n    return (\n      <Suspense fallback={<Loaders />}>\n        <AsyncModal/>\n        <AsyncHeader/>\n        <div className={css.container}>\n          <AsyncBurgerMenu/>\n        </div>\n        <AsyncBunner/>\n        <div className={css.container}>\n          <AsyncAbout/>\n        </div>\n          <AsyncUsers/>\n        <div className={css.container}>\n          <AsyncRegistredForm/>\n        </div>\n          <AsyncFooter/>\n      </Suspense>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  page: controllerSelectors.getPage(state),\n});\n\nconst mapDispatchToProps = {\n  fetchUsers: usersOperations.fetchUsers,\n  fetchToken: usersOperations.fetchToken,\n  fetchPositions: usersOperations.fetchPositions,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport {ActionTypes} from './actionTypeUsers'\r\n\r\nconst positionReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.FETCH_POSITIONS_SUCCESS:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst tokenReducer = (state = null, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.FETCH_TOKEN_SUCCESS:\r\n      return payload.token;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst itemsReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.FETCH_USERS_SUCCESS:\r\n      return [...state, ...payload.users.sort((a,b) =>  a.registration_timestamp > b.registration_timestamp)];\r\n\r\n    case ActionTypes.FETCH_USER_BY_ID_SUCCESS:\r\n    return payload;\r\n\r\n    case ActionTypes.ADD_USER_SUCCESS:\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loadingReducer = (state = false, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.FETCH_USERS_REQUEST:\r\n    case ActionTypes.FETCH_POSITIONS_REQUEST:\r\n    case ActionTypes.FETCH_TOKEN_REQUEST:\r\n    case ActionTypes.FETCH_USER_BY_ID_REQUEST:\r\n    case ActionTypes.ADD_USER_REQUEST:\r\n      return true;\r\n\r\n    case ActionTypes.FETCH_POSITIONS_SUCCESS:\r\n    case ActionTypes.FETCH_POSITIONS_ERROR:\r\n    case ActionTypes.FETCH_TOKEN_SUCCESS:\r\n    case ActionTypes.FETCH_TOKEN_ERROR:\r\n    case ActionTypes.FETCH_USERS_SUCCESS:\r\n    case ActionTypes.FETCH_USERS_ERROR:\r\n    case ActionTypes.FETCH_USER_BY_ID_SUCCESS:\r\n    case ActionTypes.FETCH_USER_BY_ID_ERROR:\r\n    case ActionTypes.ADD_USER_SUCCESS:\r\n    case ActionTypes.ADD_USER_ERROR:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst errorReducer = (state = null, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.FETCH_POSITIONS_REQUEST:\r\n    case ActionTypes.FETCH_TOKEN_REQUEST:\r\n    case ActionTypes.FETCH_USERS_REQUEST:\r\n    case ActionTypes.FETCH_USER_BY_ID_REQUEST:\r\n    case ActionTypes.ADD_USER_REQUEST:\r\n      return null;\r\n\r\n    case ActionTypes.FETCH_POSITIONS_ERROR:\r\n    case ActionTypes.FETCH_TOKEN_ERROR:\r\n    case ActionTypes.FETCH_USERS_ERROR:\r\n    case ActionTypes.FETCH_USER_BY_ID_ERROR:\r\n    case ActionTypes.ADD_USER_ERROR:\r\n      return payload.error;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  positions : positionReducer,\r\n  token : tokenReducer,\r\n  items: itemsReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n});","import { combineReducers } from 'redux';\r\nimport { ActionTypes } from './actionTypeController';\r\n\r\nconst totalPage = (state = 1, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.HANDLE_TOTAL_PAGE:\r\n      return payload;\r\n     default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst currentPage = (state = 1, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.HANDLE_URL_PAGE:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst modalOpen = (state = false, { type }) => {\r\n  switch (type) {\r\n    case ActionTypes.MODAL_OPEN:\r\n      return true;\r\n    case ActionTypes.MODAL_CLOSE:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst burgerMenuOpen = (state = false, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.HANDLE_OPEN_BURGER_MENU:\r\n      return !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  modalOpen,\r\n  burgerMenuOpen,\r\n  currentPage,\r\n  totalPage,\r\n});","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport usersReducers from './users/usersReducers';\r\nimport controllerReducers from \"./controller/controllerReducers\";\r\n\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n  users: usersReducers,\r\n  controllers : controllerReducers,\r\n  // session :\r\n\r\n});\r\n\r\nconst middleware = [ReduxThunk];\r\nconst enhancer = applyMiddleware(...middleware);\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import axios from 'axios';\r\nimport {\r\n  fetchPositionsRequest,\r\n  fetchPositionsSuccess,\r\n  fetchPositionsError,\r\n  fetchUsersRequest,\r\n  fetchUsersSuccess,\r\n  fetchUsersError,\r\n  fetchTokenRequest,\r\n  fetchTokenSuccess,\r\n  fetchTokenError,\r\n  addUserRequest,\r\n  addUserSuccess,\r\n  addUserError,\r\n} from './usersActions';\r\n\r\nimport {modalOpen} from '../controller/controllerActions'\r\n\r\nimport {handleTotalPage} from '../controller/controllerActions'\r\n\r\n\r\n// FETCH USERS\r\nexport const fetchUsers = (page) => dispatch => {\r\n  const screenWidth = document.documentElement.clientWidth;\r\n  let count = 5;\r\n  if(screenWidth < 768) {\r\n    count = 3\r\n  } else {\r\n    count = 6\r\n  }\r\n  const URL  = `https://frontend-test-assignment-api.abz.agency/api/v1/users?page=${page}&count=${count}`;\r\n\r\n  dispatch(fetchUsersRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(handleTotalPage(response.data.total_pages));\r\n      dispatch(fetchUsersSuccess(response.data.users));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchUsersError(error));\r\n    });\r\n};\r\n\r\n\r\n// FETCH TOKEN\r\nexport const fetchToken = () => dispatch => {\r\n  const URL  = `https://frontend-test-assignment-api.abz.agency/api/v1/token`;\r\n  dispatch(fetchTokenRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchTokenSuccess(response.data.token));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchTokenError(error));\r\n    });\r\n};\r\n\r\n\r\n//FETCH POSITIONS\r\nexport const fetchPositions = () => dispatch => {\r\n  const URL  = 'https://frontend-test-assignment-api.abz.agency/api/v1/positions';\r\n  dispatch(fetchPositionsRequest());\r\n  axios\r\n    .get(URL)\r\n    .then(response => {\r\n      dispatch(fetchPositionsSuccess(response.data.positions));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchPositionsError(error));\r\n    });\r\n};\r\n\r\n// POST USERS\r\n  export const fetchPostUser = (data , token) => dispatch => {\r\n    const URL  = \"https://frontend-test-assignment-api.abz.agency/api/v1/users\";\r\n    dispatch(addUserRequest());\r\n    axios\r\n      .post(URL, data, {headers : {'Token': token}})\r\n      .then(response => {\r\n        console.log(response)\r\n        dispatch(modalOpen())\r\n        dispatch(addUserSuccess())\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error)\r\n        dispatch(addUserError(error));\r\n      });\r\n  };","import {ActionTypes} from './actionTypeUsers'\r\n\r\n//FETCH POSITION\r\nexport const fetchPositionsRequest = () => ({\r\n  type: ActionTypes.FETCH_POSITIONS_REQUEST,\r\n});\r\n\r\nexport const fetchPositionsSuccess = (position) => ({\r\n  type: ActionTypes.FETCH_POSITIONS_SUCCESS,\r\n  payload : position\r\n});\r\n\r\nexport const fetchPositionsError = error => ({\r\n  type: ActionTypes.FETCH_POSITIONS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH TOKEN\r\nexport const fetchTokenRequest = () => ({\r\n  type: ActionTypes.FETCH_TOKEN_REQUEST,\r\n});\r\n\r\nexport const fetchTokenSuccess = token => ({\r\n  type: ActionTypes.FETCH_TOKEN_SUCCESS,\r\n  payload : {\r\n    token\r\n  }\r\n});\r\n\r\nexport const fetchTokenError = error => ({\r\n  type: ActionTypes.FETCH_TOKEN_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// FETCH USERS\r\nexport const fetchUsersRequest = () => ({\r\n  type: ActionTypes.FETCH_USERS_REQUEST,\r\n});\r\n\r\nexport const fetchUsersSuccess = users => ({\r\n  type: ActionTypes.FETCH_USERS_SUCCESS,\r\n  payload : {\r\n    users,\r\n  }\r\n});\r\n\r\nexport const fetchUsersError = error => ({\r\n  type: ActionTypes.FETCH_USERS_ERROR,\r\n  payload : {\r\n    error,\r\n  }\r\n});\r\n\r\n// ADD USERS\r\nexport const addUserRequest = () => ({\r\n  type: ActionTypes.ADD_USER_REQUEST,\r\n});\r\n\r\nexport const addUserSuccess = user => ({\r\n  type: ActionTypes.ADD_USER_SUCCESS,\r\n  payload: {\r\n    user,\r\n  },\r\n});\r\n\r\nexport const addUserError = error => ({\r\n  type: ActionTypes.ADD_USER_ERROR,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1_ZgP\"};","export const modalIsOpen = state => state.controllers.modalOpen;\r\n\r\nexport const getPage = state => state.controllers.currentPage;\r\n\r\nexport const getTotalPage = state => state.controllers.totalPage;\r\n\r\nexport const burgerMenuIsOpen = state => state.controllers.burgerMenuOpen;","export const ActionTypes = {\r\n  MODAL_OPEN: 'MODAL_OPEN',\r\n  MODAL_CLOSE: 'MODAL_CLOSE',\r\n\r\n  HANDLE_OPEN_BURGER_MENU: 'HANDLE_OPEN_BURGER_MENU',\r\n  HANDLE_BURGER_EVENT_BUTTON: 'HANDLE_BURGER_EVENT_BUTTON',\r\n\r\n  HANDLE_URL_PAGE : \"HANDLE_URL_PAGE\",\r\n\r\n  HANDLE_TOTAL_PAGE : \"HANDLE_TOTAL_PAGE\",\r\n};","import {ActionTypes} from './actionTypeController'\r\n\r\nexport const reload = () => ({\r\n  type: ActionTypes.APP_RELOAD,\r\n  payload: {},\r\n});\r\n\r\nexport const modalOpen = () => ({\r\n  type: ActionTypes.MODAL_OPEN,\r\n  payload: {},\r\n});\r\nexport const modalClose = () => ({\r\n  type: ActionTypes.MODAL_CLOSE,\r\n  payload: {},\r\n});\r\n\r\nexport const burgerMenuOpen = () => ({\r\n  type: ActionTypes.HANDLE_OPEN_BURGER_MENU,\r\n  payload: {},\r\n});\r\n\r\nexport const handleCurrentPage = page => ({\r\n  type: ActionTypes.HANDLE_URL_PAGE,\r\n  payload : page\r\n});\r\n\r\nexport const handleTotalPage = value => ({\r\n  type: ActionTypes.HANDLE_TOTAL_PAGE,\r\n  payload: value,\r\n})\r\n"],"sourceRoot":""}