{"version":3,"sources":["redux/users/usersSelectors.js","components/Modal/Moda.module.css","components/Modal/Modal.js"],"names":["getAllUsers","state","users","items","getToken","token","getPositions","positions","getMessage","message","module","exports","Modal","backdropRef","createRef","handleKeyPress","e","code","props","modalClose","handleBackdropClick","current","target","window","addEventListener","this","removeEventListener","modalIsOpen","className","css","backdrop","ref","onClick","modal","container","header","title","buttonClose","desc","text","greatButton","Component","mapDispatchToProps","controllerActions","connect","usersSelectors","controllerSelectors"],"mappings":"gHAAA,wIAAO,IAAMA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAEnCC,EAAW,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAE/BC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,WAErCC,EAAa,SAAAP,GAAK,OAAIA,EAAMC,MAAMO,U,oBCL/CC,EAAOC,QAAU,CAAC,SAAW,uBAAuB,MAAQ,oBAAoB,UAAY,wBAAwB,OAAS,qBAAqB,MAAQ,oBAAoB,YAAc,0BAA0B,KAAO,mBAAmB,KAAO,mBAAmB,YAAc,4B,sJCMlRC,E,2MACJC,YAAcC,sB,EAUdC,eAAiB,SAAAC,GACA,WAAXA,EAAEC,MACN,EAAKC,MAAMC,c,EAGbC,oBAAsB,SAAAJ,GAAM,IACnBK,EAAW,EAAKR,YAAhBQ,QACHA,GAAWL,EAAEM,SAAWD,GAG5B,EAAKH,MAAMC,c,mFAjBXI,OAAOC,iBAAiB,UAAWC,KAAKV,kB,6CAIxCQ,OAAOG,oBAAoB,UAAWD,KAAKV,kB,+BAgBnC,IAAD,EAC2BU,KAAKP,MAAhCS,EADA,EACAA,YAAaR,EADb,EACaA,WAEpB,OAAKQ,EAKH,yBACEC,UAAWC,IAAIC,SACfC,IAAKN,KAAKZ,YACVmB,QAASP,KAAKL,qBAEd,yBAAKQ,UAAWC,IAAII,OAClB,yBAAKL,UAAWC,IAAIK,WAClB,yBAAKN,UAAWC,IAAIM,QAClB,wBAAIP,UAAWC,IAAIO,OAAnB,mBAGA,4BACER,UAAWC,IAAIQ,YACfL,QAAS,SAAAhB,GAAC,OAAIG,EAAWH,OAI7B,yBAAKY,UAAWC,IAAIS,MAClB,uBAAGV,UAAWC,IAAIU,MAAlB,kDAIF,4BACEP,QAAS,SAAAhB,GAAC,OAAIG,EAAWH,IACzBY,UAAWC,IAAIW,aAFjB,YA1BC,S,GA5BOC,aAwEdC,EAAqB,CACzBvB,WAAYwB,KAGCC,uBATS,SAAC3C,GAAD,MAAY,CAClCQ,QAASoC,IAA0B5C,GACnC0B,YAAamB,IAAgC7C,MAOPyC,EAAzBE,CAA6ChC","file":"static/js/5.7883668f.chunk.js","sourcesContent":["export const getAllUsers = state => state.users.items;\r\n\r\nexport const getToken = state => state.users.token;\r\n\r\nexport  const getPositions = state => state.users.positions;\r\n\r\nexport const getMessage = state => state.users.message;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Moda_backdrop__2JBgb\",\"modal\":\"Moda_modal__36kLH\",\"container\":\"Moda_container__1bRnj\",\"header\":\"Moda_header__23STC\",\"title\":\"Moda_title__2mkuL\",\"buttonClose\":\"Moda_buttonClose__1meJz\",\"desc\":\"Moda_desc__1NH9y\",\"text\":\"Moda_text__1gZJl\",\"greatButton\":\"Moda_greatButton__3pI9w\"};","import React, {Component, createRef} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as usersSelectors from '../../redux/users/usersSelectors';\r\nimport * as controllerSelectors from '../../redux/controller/controllerSelectors';\r\nimport * as controllerActions from '../../redux/controller/controllerActions'\r\nimport css from './Moda.module.css'\r\n\r\nclass Modal extends Component {\r\n  backdropRef = createRef();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if (e.code !== 'Escape') return;\r\n    this.props.modalClose();\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    const {current} = this.backdropRef;\r\n    if (current && e.target !== current) {\r\n      return;\r\n    }\r\n    this.props.modalClose();\r\n  };\r\n\r\n  render() {\r\n    const {modalIsOpen, modalClose} = this.props;\r\n\r\n    if (!modalIsOpen) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={css.backdrop}\r\n        ref={this.backdropRef}\r\n        onClick={this.handleBackdropClick}\r\n      >\r\n        <div className={css.modal}>\r\n          <div className={css.container}>\r\n            <div className={css.header}>\r\n              <h1 className={css.title}>\r\n                Congratulations\r\n              </h1>\r\n              <button\r\n                className={css.buttonClose}\r\n                onClick={e => modalClose(e)}\r\n              >\r\n              </button>\r\n            </div>\r\n            <div className={css.desc}>\r\n              <p className={css.text}>\r\n                You have successfully passed the registration\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={e => modalClose(e)}\r\n              className={css.greatButton}\r\n            >\r\n              Great\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  message: usersSelectors.getMessage(state),\r\n  modalIsOpen: controllerSelectors.modalIsOpen(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  modalClose: controllerActions.modalClose\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);"],"sourceRoot":""}